/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authLayoutImport } from './routes/(auth)/_layout'
import { Route as appLayoutImport } from './routes/(app)/_layout'
import { Route as appLayoutTransactionIndexImport } from './routes/(app)/_layout/transaction/index'
import { Route as appLayoutProfileIndexImport } from './routes/(app)/_layout/profile/index'
import { Route as appLayoutHomeIndexImport } from './routes/(app)/_layout/home/index'
import { Route as appLayoutBudgetIndexImport } from './routes/(app)/_layout/budget/index'

// Create Virtual Routes

const authImport = createFileRoute('/(auth)')()
const appImport = createFileRoute('/(app)')()
const IndexLazyImport = createFileRoute('/')()
const authLayoutRegisterLazyImport = createFileRoute(
  '/(auth)/_layout/register',
)()
const authLayoutLoginLazyImport = createFileRoute('/(auth)/_layout/login')()

// Create/Update Routes

const authRoute = authImport.update({
  id: '/(auth)',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const appRoute = appImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const authLayoutRoute = authLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => authRoute,
} as any)

const appLayoutRoute = appLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => appRoute,
} as any)

const authLayoutRegisterLazyRoute = authLayoutRegisterLazyImport
  .update({
    id: '/register',
    path: '/register',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/_layout/register.lazy').then((d) => d.Route),
  )

const authLayoutLoginLazyRoute = authLayoutLoginLazyImport
  .update({
    id: '/login',
    path: '/login',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/_layout/login.lazy').then((d) => d.Route))

const appLayoutTransactionIndexRoute = appLayoutTransactionIndexImport.update({
  id: '/transaction/',
  path: '/transaction/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appLayoutProfileIndexRoute = appLayoutProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appLayoutHomeIndexRoute = appLayoutHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appLayoutBudgetIndexRoute = appLayoutBudgetIndexImport.update({
  id: '/budget/',
  path: '/budget/',
  getParentRoute: () => appLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_layout': {
      id: '/(app)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appLayoutImport
      parentRoute: typeof appRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_layout': {
      id: '/(auth)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof authRoute
    }
    '/(auth)/_layout/login': {
      id: '/(auth)/_layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLayoutLoginLazyImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/_layout/register': {
      id: '/(auth)/_layout/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authLayoutRegisterLazyImport
      parentRoute: typeof authLayoutImport
    }
    '/(app)/_layout/budget/': {
      id: '/(app)/_layout/budget/'
      path: '/budget'
      fullPath: '/budget'
      preLoaderRoute: typeof appLayoutBudgetIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/_layout/home/': {
      id: '/(app)/_layout/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof appLayoutHomeIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/_layout/profile/': {
      id: '/(app)/_layout/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof appLayoutProfileIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/_layout/transaction/': {
      id: '/(app)/_layout/transaction/'
      path: '/transaction'
      fullPath: '/transaction'
      preLoaderRoute: typeof appLayoutTransactionIndexImport
      parentRoute: typeof appLayoutImport
    }
  }
}

// Create and export the route tree

interface appLayoutRouteChildren {
  appLayoutBudgetIndexRoute: typeof appLayoutBudgetIndexRoute
  appLayoutHomeIndexRoute: typeof appLayoutHomeIndexRoute
  appLayoutProfileIndexRoute: typeof appLayoutProfileIndexRoute
  appLayoutTransactionIndexRoute: typeof appLayoutTransactionIndexRoute
}

const appLayoutRouteChildren: appLayoutRouteChildren = {
  appLayoutBudgetIndexRoute: appLayoutBudgetIndexRoute,
  appLayoutHomeIndexRoute: appLayoutHomeIndexRoute,
  appLayoutProfileIndexRoute: appLayoutProfileIndexRoute,
  appLayoutTransactionIndexRoute: appLayoutTransactionIndexRoute,
}

const appLayoutRouteWithChildren = appLayoutRoute._addFileChildren(
  appLayoutRouteChildren,
)

interface appRouteChildren {
  appLayoutRoute: typeof appLayoutRouteWithChildren
}

const appRouteChildren: appRouteChildren = {
  appLayoutRoute: appLayoutRouteWithChildren,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

interface authLayoutRouteChildren {
  authLayoutLoginLazyRoute: typeof authLayoutLoginLazyRoute
  authLayoutRegisterLazyRoute: typeof authLayoutRegisterLazyRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLayoutLoginLazyRoute: authLayoutLoginLazyRoute,
  authLayoutRegisterLazyRoute: authLayoutRegisterLazyRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface authRouteChildren {
  authLayoutRoute: typeof authLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authLayoutRoute: authLayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof authLayoutRouteWithChildren
  '/login': typeof authLayoutLoginLazyRoute
  '/register': typeof authLayoutRegisterLazyRoute
  '/budget': typeof appLayoutBudgetIndexRoute
  '/home': typeof appLayoutHomeIndexRoute
  '/profile': typeof appLayoutProfileIndexRoute
  '/transaction': typeof appLayoutTransactionIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof authLayoutRouteWithChildren
  '/login': typeof authLayoutLoginLazyRoute
  '/register': typeof authLayoutRegisterLazyRoute
  '/budget': typeof appLayoutBudgetIndexRoute
  '/home': typeof appLayoutHomeIndexRoute
  '/profile': typeof appLayoutProfileIndexRoute
  '/transaction': typeof appLayoutTransactionIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/(app)': typeof appRouteWithChildren
  '/(app)/_layout': typeof appLayoutRouteWithChildren
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_layout': typeof authLayoutRouteWithChildren
  '/(auth)/_layout/login': typeof authLayoutLoginLazyRoute
  '/(auth)/_layout/register': typeof authLayoutRegisterLazyRoute
  '/(app)/_layout/budget/': typeof appLayoutBudgetIndexRoute
  '/(app)/_layout/home/': typeof appLayoutHomeIndexRoute
  '/(app)/_layout/profile/': typeof appLayoutProfileIndexRoute
  '/(app)/_layout/transaction/': typeof appLayoutTransactionIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/budget'
    | '/home'
    | '/profile'
    | '/transaction'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/budget'
    | '/home'
    | '/profile'
    | '/transaction'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/_layout'
    | '/(auth)'
    | '/(auth)/_layout'
    | '/(auth)/_layout/login'
    | '/(auth)/_layout/register'
    | '/(app)/_layout/budget/'
    | '/(app)/_layout/home/'
    | '/(app)/_layout/profile/'
    | '/(app)/_layout/transaction/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  appRoute: typeof appRouteWithChildren
  authRoute: typeof authRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  appRoute: appRouteWithChildren,
  authRoute: authRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)",
        "/(auth)"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/(app)": {
      "filePath": "(app)",
      "children": [
        "/(app)/_layout"
      ]
    },
    "/(app)/_layout": {
      "filePath": "(app)/_layout.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/_layout/budget/",
        "/(app)/_layout/home/",
        "/(app)/_layout/profile/",
        "/(app)/_layout/transaction/"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_layout"
      ]
    },
    "/(auth)/_layout": {
      "filePath": "(auth)/_layout.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_layout/login",
        "/(auth)/_layout/register"
      ]
    },
    "/(auth)/_layout/login": {
      "filePath": "(auth)/_layout/login.lazy.tsx",
      "parent": "/(auth)/_layout"
    },
    "/(auth)/_layout/register": {
      "filePath": "(auth)/_layout/register.lazy.tsx",
      "parent": "/(auth)/_layout"
    },
    "/(app)/_layout/budget/": {
      "filePath": "(app)/_layout/budget/index.tsx",
      "parent": "/(app)/_layout"
    },
    "/(app)/_layout/home/": {
      "filePath": "(app)/_layout/home/index.tsx",
      "parent": "/(app)/_layout"
    },
    "/(app)/_layout/profile/": {
      "filePath": "(app)/_layout/profile/index.tsx",
      "parent": "/(app)/_layout"
    },
    "/(app)/_layout/transaction/": {
      "filePath": "(app)/_layout/transaction/index.tsx",
      "parent": "/(app)/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
